
// STATIC:		"ALPHATEST"			"0..1"
// STATIC:		"BUMPMAP"			"0..2"
// STATIC:		"NOCULL"			"0..1"
// STATIC:		"PHONGMAP"			"0..1"
// STATIC:		"BUMPMAP2"			"0..1"
// STATIC:		"BLENDMODULATE"		"0..1"

// SKIP:		!$BUMPMAP2 && $BLENDMODULATE
// SKIP:		!$BUMPMAP && $BUMPMAP2
// SKIP:		$MODEL && $BUMPMAP2

// SKIP:		$DECAL && $BLENDMODULATE
// SKIP:		$DECAL && $BUMPMAP
// SKIP:		$DECAL && $NOCULL
// SKIP:		$DECAL && $PHONGMAP

#include "common_ps_fxc.h"
#include "common_deferred_fxc.h"


#if ALPHATEST
sampler sAlbedo							: register( s0 );
#endif

#if ALPHATEST
const float g_flAlphaRef				: register( c0 );
#endif


#if BUMPMAP
sampler sBumpmap						: register( s1 );
#endif

#if PHONGMAP
sampler sPhongmap						: register( s2 );
#else
const float2 g_flPhong_exp : register(c2);
#endif

const float2 g_flHalflambert_Litface : register(c1);

#if BUMPMAP2
sampler sBumpmap2							: register( s3 );
#endif

#if BLENDMODULATE
sampler sBlendmodulate						: register( s4 );
#endif

#if !MODEL
sampler sLightmap : register(s5);
#endif

struct PS_INPUT
{
#if BLENDMODULATE
	float4 vTexCoord				: TEXCOORD0;
#else
	float2 vTexCoord : TEXCOORD0;
#endif
	float4 worldNormal_Depth : TEXCOORD1;

#if BUMPMAP
	float3 worldTangentS			: TEXCOORD2;
	float3 worldTangentT			: TEXCOORD3;
#endif

#if NOCULL
	float vDir						: VFACE;
#endif

#if BUMPMAP2
	float4 vColor_0					: COLOR0;
#endif
	
#if !MODEL
	float4 vLightmapCoord0And1 : TEXCOORD4;
	float4 vLightmapCoord2And3 : TEXCOORD5;
#endif
};


struct PS_OUTPUT
{
	float4 vColor_0 : COLOR0;
	float4 vColor_Lightmap : COLOR1;
	
#if ( DECAL == 0 )
	float4 vColor_1				:	COLOR2;

#if ( DEFCFG_LIGHTCTRL_PACKING == 0 )
	float4 vColor_2				:	COLOR3;
#endif
	
#endif
};

float4 cubic(float v)
{
	float4 n = float4(1.0, 2.0, 3.0, 4.0) - v;
	float4 s = n * n * n;
	float x = s.x;
	float y = s.y - 4.0 * s.x;
	float z = s.z - 4.0 * s.y + 6.0 * s.x;
	float w = 6.0 - x - y - z;
	return float4(x, y, z, w) * (1.0 / 6.0);
}

float4 tex2D_bicubic(sampler tex, float2 texCoords)
{
	float2 uv1 = texCoords;
	float2 texSize = float2(512, 256); //textureSize(tex, 0);
	float2 invTexSize = 1 / texSize;
	
	texCoords = texCoords * texSize - 0.5;

	
	float2 fxy = frac(texCoords);
	texCoords -= fxy;

	float4 xcubic = cubic(fxy.x);
	float4 ycubic = cubic(fxy.y);

	float4 c = texCoords.xxyy + float2(-0.5, +1.5).xyxy;
	
	float4 s = float4(xcubic.xz + xcubic.yw, ycubic.xz + ycubic.yw);
	float4 offset = c + float4(xcubic.yw, ycubic.yw) / s;
	
	offset *= invTexSize.xxyy;

	float4 sample0 = tex2D(tex, offset.xz);
	float4 sample1 = tex2D(tex, offset.yz);
	float4 sample2 = tex2D(tex, offset.xw);
	float4 sample3 = tex2D(tex, offset.yw);

	float sx = s.x / (s.x + s.y);
	float sy = s.z / (s.z + s.w);
	
	return lerp(lerp(sample3, sample2, sx), lerp(sample1, sample0, sx), sy);
}

PS_OUTPUT main(const PS_INPUT In)
{
	PS_OUTPUT Out;

#if ALPHATEST
	float4 flAlbedoSample = tex2D( sAlbedo, In.vTexCoord.xy );
#if ALPHATEST
	clip( flAlbedoSample.a - g_flAlphaRef );
#endif
#endif

#if DECAL
	Out.vColor_0 = flAlbedoSample;
#else

#if BUMPMAP
	float3 bumpNormal = tex2D( sBumpmap, In.vTexCoord.xy ).rgb;

#if BUMPMAP2
	float3 bumpNormal2 = tex2D( sBumpmap2, In.vTexCoord.xy ).rgb;
	float flBlendfactor = In.vColor_0.w;
#if BLENDMODULATE
	flBlendfactor = GetModulatedBlend( flBlendfactor, tex2D( sBlendmodulate, In.vTexCoord.zw ).rg );
#endif
	bumpNormal = lerp( bumpNormal, bumpNormal2, flBlendfactor );
#endif

	float3 tangentNormal;
#if BUMPMAP == 1
	tangentNormal = bumpNormal * 2.0f - 1.0f;
#else
	tangentNormal = normalize( bumpBasis[0]*bumpNormal.x + bumpBasis[1]*bumpNormal.y + bumpBasis[2]*bumpNormal.z);
#endif
	float3 worldNormal = Vec3TangentToWorld( tangentNormal, In.worldNormal_Depth.xyz, In.worldTangentS, In.worldTangentT );
#else
	float3 worldNormal = In.worldNormal_Depth.xyz;
#endif

#if NOCULL
	worldNormal *= In.vDir;
#endif

	worldNormal = worldNormal * 0.5f + 0.5f;

#if ( TRANSLUCENT == 0 )
#if PHONGMAP
	float phong_exp = tex2D( sPhongmap, In.vTexCoord.xy ).x * 63.0f;
#else
#if BUMPMAP2
	float phong_exp = lerp( g_flPhong_exp.x, g_flPhong_exp.y, flBlendfactor );
#else
	float phong_exp = g_flPhong_exp.x;
#endif
#endif
#endif

#if DEFCFG_LIGHTCTRL_PACKING
	Out.vColor_0 = float4( worldNormal, PackLightingControls( phong_exp,
		g_flHalflambert_Litface.x, g_flHalflambert_Litface.y ) );
#else
	Out.vColor_0 = float4(worldNormal, 1);
	Out.vColor_2 = float4(phong_exp / 63.0f, g_flHalflambert_Litface.xy, 0);
#endif

	Out.vColor_1 = float4(In.worldNormal_Depth.w, 0, 0, 1);

#endif
	
#if !MODEL
#if BUMPMAP
	float4 flSampleLightmap = (
		tex2D( sLightmap, In.vLightmapCoord0And1.zw ) * bumpNormal.x +
		tex2D( sLightmap, In.vLightmapCoord2And3.xy ) * bumpNormal.y +
		tex2D( sLightmap, In.vLightmapCoord2And3.zw ) * bumpNormal.z
	);
#else
	float4 flSampleLightmap = tex2D(sLightmap, In.vLightmapCoord0And1.xy);
#endif
	Out.vColor_Lightmap = flSampleLightmap;
#else
	Out.vColor_Lightmap = float4(0,0,0,0);
#endif

	return Out;
}
